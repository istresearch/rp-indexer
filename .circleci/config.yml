version: 2

jobs:
  pre-build:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.7
      - run:
          name: "Determine Tag To Use"
          command: |-
            BRANCH=${CIRCLE_BRANCH#*/}
            VERSION=`cat VERSION`
            
            if [[ ! -z $CIRCLE_TAG ]]; then
              VERSION_TAG="${CIRCLE_TAG#*v}"
            elif [[ $BRANCH == "develop" ]]; then
              VERSION_TAG="ci-develop"
            else
              VERSION_TAG="ci-${VERSION%-dev}-dev-${BRANCH#dev-}"
            fi
            
            echo ${VERSION_TAG} > version_tag.txt
      - persist_to_workspace:
          root: .
          paths: .

  build-amd64:
    machine:
      image: ubuntu-2004:202111-02
    resource_class: medium
    steps:
      - attach_workspace:
          at: .
      - run:
          name: "Build and push Docker image (amd64)"
          command: |-
            IMAGE_NAME=${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}
            IMAGE_TAG=`cat version_tag.txt`-amd64

            docker login -u "${DOCKER_USER}" -p "${DOCKER_PASS}"
            echo "Building Docker container ${IMAGE_NAME}:${IMAGE_TAG}…"
            source scm/utils.sh; buildImage "${IMAGE_NAME}" "${IMAGE_TAG}"  "Dockerfile" \
              --build-arg "BUILD_NUMBER=${CIRCLE_BUILD_NUM}" \
              --build-arg "ARCH=${IMAGE_TAG##*-}/"

  build-arm64:
    machine:
      image: ubuntu-2004:202111-02
    resource_class: arm.medium
    steps:
      - attach_workspace:
          at: .
      - run:
          name: "Build and push Docker image (arm64)"
          command: |-
            IMAGE_NAME=${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}
            IMAGE_TAG=`cat version_tag.txt`-arm64

            docker login -u "${DOCKER_USER}" -p "${DOCKER_PASS}"
            echo "Building Docker container ${IMAGE_NAME}:${IMAGE_TAG}…"
            source scm/utils.sh; buildImage "${IMAGE_NAME}" "${IMAGE_TAG}"  "Dockerfile" \
              --build-arg "BUILD_NUMBER=${CIRCLE_BUILD_NUM}" \
              --build-arg "ARCH=${IMAGE_TAG##*-}/"

  create-manifest:
    docker:
      - image: cimg/base:stable
    steps:
      - attach_workspace:
          at: .
      - setup_remote_docker:
          version: 20.10.7
      - run:
          name: "Create and Push Docker Manifest"
          command: |-
            IMAGE_NAME=${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}
            IMAGE_TAG=`cat version_tag.txt`

            docker login -u "${DOCKER_USER}" -p "${DOCKER_PASS}"
            echo "Creating Docker manifest for ${IMAGE_NAME}:${IMAGE_TAG}…"
            docker manifest create "${IMAGE_NAME}:${IMAGE_TAG}" \
              --amend "${IMAGE_NAME}:${IMAGE_TAG}-amd64" \
              --amend "${IMAGE_NAME}:${IMAGE_TAG}-arm64"
            docker manifest push "${IMAGE_NAME}:${IMAGE_TAG}"

  deploy-container:
    docker:
      - image: cimg/base:stable
    steps:
      - attach_workspace:
          at: .
      - run:
          name: "Deploy Dev Container"
          command: |-
            IMAGE_NAME=${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}
            IMAGE_TAG=`cat version_tag.txt`
            K8_URL=https://circleci.com/api/v1.1/project/github/$CIRCLE_PROJECT_USERNAME/p4-deploy/tree/develop
            PROJECT_TO_DEPLOY=pulse-engage-rp-indexer
            echo "Deploy to K8s: ${IMAGE_NAME}:${IMAGE_TAG}"
            R=$(curl -s -XPOST --user "${CIRCLE_API_USER_TOKEN}:" \
              --data build_parameters[CIRCLE_JOB]=eks_deploy \
              --data build_parameters[DEPLOY_PROJECT]=${PROJECT_TO_DEPLOY} \
              --data build_parameters[DEPLOY_IMAGE]=${IMAGE_NAME}:${IMAGE_TAG} \
              $K8_URL \
            )
            S=$? #non-0 means error
            FAIL_TOKEN='"message" : "Project not found"'
            if [[ "$S" != "0" ]]; then
              echo "Deploy failed. $R"
              exit $S
            elif [[ "$R" == *"${FAIL_TOKEN}"* ]]; then
              echo "Project '${PROJECT_TO_DEPLOY}' not found."
              # would use 404, but that is > 255 ;)
              exit 4
            fi

workflows:
  version: 2
  rp-indexer:
    jobs:
      - pre-build:
          context: globalconfig
          filters: &build-filters
            tags:
              ignore:
                - /^test-.*/
      - build-amd64:
          context: globalconfig
          requires:
            - pre-build
          filters: *build-filters
      - build-arm64:
          context: globalconfig
          requires:
            - pre-build
          filters: *build-filters
      - create-manifest:
          context: globalconfig
          requires:
            - build-amd64
            - build-arm64
          filters: *build-filters
#      - deploy-container:
#          context: globalconfig
#          requires:
#            - create-manifest
#          filters:
#            branches:
#              only:
#                - /^develop$/
#                - /^dev[-\/].*$/
